openapi: 3.0.3
info:
  title: Youth Management Service
  description: Youth Management Service
  version: 1.0.0
servers:
  - url: http://localhost:8000/api/v1
  - url: http://localhost:8001/api/v1
  - url: http://localhost:8002/api/v1
  - url: https://bus.softbd.xyz/devportal/apis
paths:
  /:
    get:
      summary: Youth Service Information
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                service_name: NISE-3 Youth Management API Service
                service_version: V1
                lumen_version: Lumen (8.2.4) (Laravel Components ^8.0)
                module_list:
                  - Youth
                description:
                  - It is a youth management api service that manages the youths
      tags:
        - API info
  /youths:
    get:
      summary: get_list
      description: ' API endpoint to get the list of Youth profile.A successful request response will show 200 HTTP status code'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/youthRegistration'
              example:
                data:
                  - id: 1
                    first_name: Rahul
                    last_name: Das
                    gender: 1
                    skills: null
                    email: ''
                    mobile: ''
                    date_of_birth: '0000-00-00'
                    physical_disability_status: 0
                    physical_disabilities: null
                    city: null
                    zip_or_postal_code: null
                    bio: null
                    photo: null
                    cv_path: null
                    created_at: null
                    updated_at: null
                _response_status:
                  success: true
                  code: 200
                  started: 12 33 26
                  finished: 12 33 26
                _links:
                  paginate: []
                _page: []
                _order: ASC
      tags:
        - youth
  /youths/{youthId}:
    get:
      summary: get one
      description: API endpoint to get the specified Youth profile.A successful request response will show 200 HTTP status code
      parameters:
        - name: youthId
          in: path
          required: true
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: get one
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/youthRegistration'
              example: {}
      tags:
        - youth
  /youth-portfolios:
    get:
      summary: get_list
      description: ' API endpoint to get the list of Youth portfolio'
      parameters:
        - $ref: '#/components/parameters/youth_id'
      responses:
        '200':
          description: get one
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/portfolio'
              example:
                order: ASC
                data:
                  - id: 4
                    title: Geographer
                    title_en: Geographer
                    description: 'Vitae molestiae porro blanditiis quaerat quibusdam eveniet qui '
                    description_en: Vitae molestiae porro blanditiis quaerat quibusdam eveniet qui
                    youth_id: 2
                    row_status: 1
                    created_at: '2021-10-03T09:55:34.000000Z'
                    updated_at: '2021-10-03T09:55:34.000000Z'
                response_status:
                  success: true
                  code: 200
                  query_time: 0
      tags:
        - Portfolios
    post:
      summary: create
      description: API endpoint to create a Youth portfolio.A successful request response will show 200 HTTP status code
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/portfolio'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/portfolio'
              example:
                data:
                  title: Test
                  youth_id: '1'
                  updated_at: '2021-09-30T12:23:22.000000Z'
                  created_at: '2021-09-30T12:23:22.000000Z'
                  id: 24
                _response_status:
                  success: true
                  code: 201
                  message: Portfolio created successfully
                  query_time: 0
      tags:
        - Portfolios
  /youth-portfolios/{portfolioId}:
    get:
      summary: get one
      description: API endpoint to get the specified Youth portfolio.A successful request response will show 200 HTTP status code
      parameters:
        - $ref: '#/components/parameters/portfolioId'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/portfolio'
              example:
                data:
                  title: Test
                  youth_id: '1'
                  updated_at: '2021-09-30T12:23:22.000000Z'
                  created_at: '2021-09-30T12:23:22.000000Z'
                  id: 24
                _response_status:
                  success: true
                  code: 201
                  query_time: 0
      tags:
        - Portfolios
    put:
      summary: update
      description: API endpoint to update the specified Youth portfolio.A successful request response will show 200 HTTP status code
      parameters:
        - $ref: '#/components/parameters/portfolioId'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/portfolio'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/portfolio'
              example:
                data:
                  title: Test
                  youth_id: '1'
                  updated_at: '2021-09-30T12:23:22.000000Z'
                  created_at: '2021-09-30T12:23:22.000000Z'
                  id: 24
                _response_status:
                  success: true
                  code: 201
                  message: Portfolio updated successfully
                  query_time: 0
      tags:
        - Portfolios
    delete:
      summary: delete
      description: API endpoint to delete the Youth profile.A successful request response will show 200 HTTP status code
      parameters:
        - $ref: '#/components/parameters/portfolioId'
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/youthRegistration'
              example:
                _response_status:
                  success: true
                  code: 200
                  message: Portfolio deleted successfully
                  started: 12 40 05
                  finished: 12 40 05
      tags:
        - Portfolios
  /skills:
    get:
      summary: get_list
      description: API endpoint to get the list of Skills.A successful request response will show 200 HTTP status code
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/page_size'
        - $ref: '#/components/parameters/row_status_optional'
        - $ref: '#/components/parameters/order'
        - $ref: '#/components/parameters/title_en_optional'
        - $ref: '#/components/parameters/title_bn_optional'
      responses:
        '200':
          description: get_list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Skill'
              example:
                current_page: 1
                total_page: 1
                page_size: 10
                total: 10
                order: ASC
                data:
                  - id: 1
                    title_en: Heavy Equipment Mechanic
                    title_bn: Heavy Equipment Mechanic
                    description: Sed omnis nemo sint consequatur qui quia maiores. Est non labore et. Dolorum sapiente dolorum earum cupiditate. Qui velit nam sequi hic est quisquam. Mollitia enim dicta iure consequatur. Nam aut non est maxime aspernatur. Quidem cumque eius numquam eos repellendus. Eum reprehenderit ullam et ut voluptatem natus quia. Voluptas voluptatibus cupiditate distinctio minima enim. Eaque nihil qui qui delectus. Modi sed aut soluta qui. Numquam veniam fuga a veniam ea eligendi. Hic odit illo nihil ab. Sapiente et sit ut at nulla qui nostrum. Eaque ea qui aut iusto quaerat quae non est. Eum et ex et aut a aut. Debitis repellat ex omnis aut quisquam magnam sequi maxime. Repudiandae laborum eum harum enim optio vero. Sunt et voluptatem aut architecto natus a fuga. Et odit magni dicta accusamus molestiae culpa eaque. Esse doloremque quasi ipsam ea dolorem aut. Esse non adipisci quod omnis nisi magni. Et ea corrupti minus consequatur quo molestiae. Sunt quisquam et voluptatibus omnis voluptas at eum. Iure asperiores doloribus id. Laudantium optio error aut ut ratione et nulla. Consequatur officiis odio et eos. Illo porro in nulla et consequatur id. Molestiae reprehenderit dicta nihil omnis. Qui debitis incidunt quis eum dolorum. Qui illo quas vero aut eum. Aperiam et eum voluptas autem recusandae quis. Delectus enim voluptatibus qui hic et. Quidem dolores possimus omnis eveniet voluptatibus. Quam possimus suscipit occaecati commodi architecto. Harum tempora minima id voluptatem expedita aliquam. Repudiandae ut minima dolorum alias fugiat officiis repudiandae. Ratione corrupti tempore et doloribus aut doloribus quasi quidem. Praesentium soluta et debitis eaque voluptatem architecto corporis. Aut laudantium harum sed. Dolores optio impedit a animi veniam illum. Qui expedita praesentium ut nam dolores distinctio. Ipsum rerum aliquid aliquam eligendi vel a. Debitis magnam rem adipisci non qui. Iure reprehenderit a id deserunt eligendi qui incidunt velit. Sint aut et ea sapiente optio impedit autem. Quasi enim ea recusandae omnis mollitia consequuntur ipsam. Doloremque incidunt facere quisquam est aut voluptatem. Aut labore autem id omnis.
                    row_status: 1
                    created_at: '2021-08-19T08:55:03.000000Z'
                    updated_at: '2021-08-19T08:55:03.000000Z'
                    created_by: null
                    updated_by: null
                  - id: 2
                    title_en: Logging Supervisor
                    title_bn: Logging Supervisor
                    description: Quasi unde necessitatibus ut sequi est adipisci. Accusamus in sit deserunt voluptate. Sunt aspernatur architecto delectus. Incidunt sit voluptatem qui cum autem eum ut. Voluptatem eos et consequatur optio sit. Eveniet excepturi accusantium ipsum. Est nihil delectus at et. Saepe totam ipsa laboriosam tenetur. Et voluptate aut fugit error voluptate. Est dolorem sapiente dolore asperiores amet. Nemo dolor rerum eveniet voluptatem cumque et. Quidem qui corrupti vero repellat sunt. Non vel consequatur rerum deleniti voluptas. Impedit architecto libero et suscipit. Eveniet est dolorem qui. Ea eum nobis enim sed. Nulla cupiditate vero cupiditate non reprehenderit error. Quo quae quod velit enim ratione deserunt. Qui et numquam qui et quo maxime veniam sit. Rerum expedita occaecati sed in saepe et et. Et consequatur repudiandae quia. Mollitia nulla consequatur omnis. Doloremque optio ipsum cumque unde nisi. Quod molestiae quos quia nulla officiis. Dolore impedit sit architecto laboriosam. Sint nisi dolore ut enim. Sit non quae qui nesciunt temporibus a. Inventore odio non harum reiciendis. Vero eligendi sequi deserunt consequatur non velit. Voluptatem quia veritatis voluptatem ipsum odio dolorem. Fuga voluptates consectetur magni rerum. Accusantium assumenda atque magnam temporibus a placeat laudantium. Reprehenderit ut consequuntur magnam praesentium. Distinctio nobis aliquid optio. Iure est tempore officia quas recusandae hic quisquam. Soluta aut aut delectus maxime tenetur porro. Qui dolor maiores veritatis odio tenetur et. Voluptatem omnis velit eos similique perferendis ut. Temporibus dolore aut ex hic quisquam. Sequi quo optio quasi qui facere eius. Sint sint voluptas qui culpa tempora qui eveniet. Vero laborum labore et quod nulla ut. Quis iste qui a dolor dolorum nulla possimus. Illum necessitatibus maiores ad voluptatem possimus. Blanditiis eaque ut ut maxime eius autem occaecati. Quibusdam nihil sint non dolores vel quia. Eos facilis doloremque eligendi deleniti id. Esse qui velit praesentium quaerat qui a accusamus. Perspiciatis excepturi harum deleniti in doloremque est dolorum ipsa. In molestiae corrupti quo quos corporis aut. Aut necessitatibus temporibus non natus blanditiis iste. Maiores aut quod praesentium deserunt error deserunt in. Earum iusto autem asperiores tenetur unde. Libero ipsa corporis commodi atque incidunt. Ratione qui ea ab doloremque porro aut cupiditate sit. Et fugiat ad nihil officia.
                    row_status: 1
                    created_at: '2021-08-19T08:55:03.000000Z'
                    updated_at: '2021-08-19T08:55:03.000000Z'
                    created_by: null
                    updated_by: null
                response_status:
                  success: true
                  code: 200
                  query_time: 0
      tags:
        - skills
    post:
      summary: create
      description: API endpoint to create a Skill.A successful request response will show 200 HTTP status code
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Skill'
      responses:
        '200':
          description: create
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Skill'
              example:
                data:
                  title_en: abc
                  title_bn: abc
                  description: Neque porro quisquam est qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit
                  updated_at: '2021-08-22T11:25:13.000000Z'
                  created_at: '2021-08-22T11:25:13.000000Z'
                  id: 6
                _response_status:
                  success: true
                  code: 201
                  message: Skill added successfully
                  query_time: 0
      tags:
        - skills
  /skills/{skillId}:
    get:
      summary: get_one
      description: API endpoint to get a specified Skill.A successful request response will show 200 HTTP status code
      parameters:
        - $ref: '#/components/parameters/skillId'
      responses:
        '200':
          description: get_one
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Skill'
              example:
                data:
                  id: 1
                  title_en: Corporate management
                  title_bn: কর্পোরেট ব্যবস্থাপনা
                  description: null
                  row_status: 1
                  created_at: '2021-07-26T12:08:11.000000Z'
                  updated_at: '2021-07-26T12:08:11.000000Z'
                response_status:
                  success: true
                  code: 200
                  query_time: 0
      tags:
        - skills
    put:
      summary: update
      description: API endpoint to update the specified Skill. A successful request response will show 200 HTTP status code
      parameters:
        - $ref: '#/components/parameters/skillId'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Skill'
      responses:
        '200':
          description: update
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Skill'
              example:
                data:
                  id: 1
                  title_en: Corporate management
                  title_bn: কর্পোরেট ব্যবস্থাপনা
                  description: null
                  row_status: 1
                  created_at: '2021-07-26T12:08:11.000000Z'
                  updated_at: '2021-07-26T12:08:11.000000Z'
                _response_status:
                  success: true
                  code: 200
                  message: skill updated successfully.
                  query_time: 0
      tags:
        - skills
    delete:
      summary: delete
      description: API endpoint to delete the specified Skill.A successful request response will show 200 HTTP status code
      parameters:
        - $ref: '#/components/parameters/skillId'
      responses:
        '200':
          description: delete
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Skill'
              example:
                _response_status:
                  success: true
                  code: 200
                  message: Skill deleted successfully.
                  query_time: 0
      tags:
        - skills
  /youth-job-experience:
    get:
      summary: get_list
      description: 'API endpoint to get the list of Job Experiences. A successful request response will show 200 HTTP status code '
      parameters:
        - $ref: '#/components/parameters/company_name_en'
        - $ref: '#/components/parameters/company_name_bn'
        - $ref: '#/components/parameters/youth_id'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/page_size'
        - $ref: '#/components/parameters/row_status'
        - $ref: '#/components/parameters/order'
      responses:
        '200':
          description: get_list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jobExperience'
              example:
                current_page: 1
                total_page: 1
                page_size: 10
                total: 10
                order: ASC
                data:
                  - id: 1
                    youth_id: 1
                    company_name: Schmitt Group
                    company_name_en: Schmitt Group
                    position: HR Manager
                    position_en: HR Manager
                    employment_type_id: 1
                    location: 720 Gina Ways
                    location_en: 8485 Gleason Place
                    job_description: Pressing Machine Operator
                    job_description_en: Wind Instrument Repairer
                    start_date: '1974-07-03'
                    end_date: '1993-06-06'
                    is_currently_work: 0
                    row_status: 1
                    created_at: '2021-08-19T08:55:03.000000Z'
                    updated_at: '2021-08-19T08:55:03.000000Z'
                response_status:
                  success: true
                  code: 200
                  query_time: 0
      tags:
        - job experience
    post:
      summary: create
      description: API endpoint to create a Job Experience.A successful request response will show 200 HTTP status code
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/jobExperience'
      responses:
        '200':
          description: create
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jobExperience'
              example:
                data:
                  id: 2
                  youth_id: 5
                  company_name: Kerluke-Maggio
                  company_name_en: Kerluke-Maggio
                  position: Psychiatric Aide
                  position_en: Psychiatric Aide
                  employment_type_id: 3
                  location: 720 Gina Ways
                  location_en: 8485 Gleason Place
                  job_description: Pressing Machine Operator
                  job_description_en: Wind Instrument Repairer
                  start_date: '1974-07-03'
                  end_date: '1993-06-06'
                  is_currently_work: 0
                  row_status: 1
                  created_at: '2021-08-19T08:55:03.000000Z'
                  updated_at: '2021-08-19T08:55:03.000000Z'
                _response_status:
                  success: true
                  code: 201
                  message: Job experience added successfully
                  query_time: 0
      tags:
        - job experience
  /youth-job-experience/{jobExperienceId}:
    get:
      summary: get_one
      description: API endpoint to get a specified Job Experience.A successful request response will show 200 HTTP status code
      parameters:
        - $ref: '#/components/parameters/jobExperienceId'
      responses:
        '200':
          description: get_one
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jobExperience'
              example:
                data:
                  id: 3
                  youth_id: 18
                  company_name: Durgan-Marks
                  company_name_en: Durgan-Marks
                  position: User Experience Manager
                  position_en: User Experience Manager
                  employment_type_id: 1
                  location: 720 Gina Ways
                  location_en: 8485 Gleason Place
                  job_description: Pressing Machine Operator
                  job_description_en: Wind Instrument Repairer
                  start_date: '1974-07-03'
                  end_date: '1993-06-06'
                  is_currently_work: 1
                  row_status: 1
                  created_at: '2021-07-26T12:08:11.000000Z'
                  updated_at: '2021-07-26T12:08:11.000000Z'
                response_status:
                  success: true
                  code: 200
                  query_time: 0
      tags:
        - job experience
    put:
      summary: update
      description: API endpoint to update the specified Job experience. A successful request response will show 200 HTTP status code
      parameters:
        - $ref: '#/components/parameters/jobExperienceId'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/jobExperience'
      responses:
        '200':
          description: update
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jobExperience'
              example:
                data:
                  id: 4
                  youth_id: 9
                  company_name: Brekke-Abbott
                  company_name_en: Brekke-Abbott
                  position: Electronics Engineering Technician
                  position_en: Electronics Engineering Technician
                  employment_type_id: 1
                  location: 720 Gina Ways
                  location_en: 8485 Gleason Place
                  job_description: Pressing Machine Operator
                  job_description_en: Wind Instrument Repairer
                  start_date: '1974-07-03'
                  end_date: '1993-06-06'
                  is_currently_work: 0
                  row_status: 1
                  created_at: '2021-07-26T12:08:11.000000Z'
                  updated_at: '2021-07-26T12:08:11.000000Z'
                _response_status:
                  success: true
                  code: 200
                  message: Job experience updated successfully.
                  query_time: 0
      tags:
        - job experience
    delete:
      summary: delete
      description: API endpoint to delete the specified Job experience.A successful request response will show 200 HTTP status code
      parameters:
        - $ref: '#/components/parameters/jobExperienceId'
      responses:
        '200':
          description: delete
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jobExperience'
              example:
                _response_status:
                  success: true
                  code: 200
                  message: Job experience deleted successfully.
                  query_time: 0
      tags:
        - job experience
  /youth-profile:
    get:
      summary: Get youth profile
      description: 'API endpoint to get the youth profile. A successful request response will show 200 HTTP status code '
      responses:
        '200':
          description: get youth profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/youthProfile'
              example:
                current_page: 1
                total_page: 1
                page_size: 10
                total: 10
                order: ASC
                data:
                  - id: 1
                    first_name: Tellur
                    last_name: Rahman
                    gender: 1
                    skills: null
                    email: ''
                    mobile: ''
                    date_of_birth: '0000-00-00'
                    physical_disability_status: 0
                    physical_disabilities: null
                    city: null
                    zip_or_postal_code: null
                    bio: null
                    photo: null
                    cv_path: null
                    created_at: null
                    updated_at: null
                response_status:
                  success: true
                  code: 200
                  query_time: 0
      tags:
        - Youth Profile
  /youth-registration:
    post:
      summary: Youth registration
      description: 'API endpoint to register a youth. A successful request response will show 200 HTTP status code '
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/youthRegistration'
      responses:
        '200':
          description: register_youth
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/youthRegistration'
              example:
                current_page: 1
                total_page: 1
                page_size: 10
                total: 10
                order: ASC
                data:
                  - id: 1
                    first_name: Tellur
                    last_name: Rahman
                    gender: 1
                    skills: null
                    email: sdfg@dom.com
                    mobile: '01245577498'
                    date_of_birth: '0000-00-00'
                    physical_disability_status: 0
                    physical_disabilities: null
                    city: null
                    zip_or_postal_code: null
                    bio: null
                    photo: null
                    cv_path: null
                    created_at: '2021-08-19T08:55:03.000000Z'
                    updated_at: '2021-08-19T08:55:03.000000Z'
                response_status:
                  success: true
                  code: 200
                  query_time: 0
      tags:
        - Youth Registration
  /youth-personal-info-update:
    put:
      summary: Youth personal info update
      description: 'API endpoint to update a youth profile. A successful request response will show 200 HTTP status code '
      parameters:
        - name: is_freelance_profile
          in: query
          schema:
            type: string
            default: 0
        - name: first_name
          in: query
          required: true
          schema:
            type: string
            maximum: 500
        - name: first_name_en
          in: query
          schema:
            type: string
            maximum: 500
        - name: last_name
          in: query
          required: true
          schema:
            type: string
            maximum: 500
        - name: last_name_en
          in: query
          schema:
            type: string
            maximum: 500
        - name: gender
          in: query
          schema:
            type: integer
            enum:
              - 1
              - 2
              - 3
            description: 1=>male,2=>female,3=>others
        - name: email
          in: query
          required: true
          schema:
            type: string
        - name: mobile
          in: query
          required: true
          schema:
            type: string
        - name: date_of_birth
          in: query
          schema:
            type: string
            format: date-time
            example: 2021-10-5
        - name: physical_disability_status
          in: query
          schema:
            type: integer
            enum:
              - 0
              - 1
            description: 0=>No,1=>Yes
            default: 0
        - name: loc_division_id
          in: query
          required: true
          schema:
            type: integer
        - name: loc_district_id
          in: query
          required: true
          schema:
            type: integer
        - name: loc_upazila_id
          in: query
          schema:
            type: integer
        - name: village_or_area
          in: query
          schema:
            type: string
            maximum: 500
        - name: village_or_area_en
          in: query
          schema:
            type: string
            maximum: 500
        - name: house_n_road
          in: query
          schema:
            type: string
            maximum: 500
        - name: house_n_road_en
          in: query
          schema:
            type: string
            maximum: 500
        - name: zip_or_postal_code
          in: query
          schema:
            type: string
            maximum: 10
        - name: bio
          in: query
          schema:
            type: string
        - name: bio_en
          in: query
          schema:
            type: string
        - name: photo
          in: query
          schema:
            type: string
            maximum: 300
        - name: cv_path
          in: query
          schema:
            type: string
            maximum: 300
      responses:
        '200':
          description: update_youth_profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/youthProfileUpdateSchema'
              example:
                current_page: 1
                total_page: 1
                page_size: 10
                total: 10
                order: ASC
                data:
                  - id: 1
                    first_name: Tellur
                    last_name: Rahman
                    gender: 1
                    skills: null
                    email: sdfg@dom.com
                    mobile: '01245577498'
                    date_of_birth: '0000-00-00'
                    physical_disability_status: 0
                    physical_disabilities: null
                    city: null
                    zip_or_postal_code: null
                    bio: null
                    photo: null
                    cv_path: null
                    created_at: '2021-08-19T08:55:03.000000Z'
                    updated_at: '2021-08-19T08:55:03.000000Z'
                response_status:
                  success: true
                  code: 200
                  query_time: 0
      tags:
        - Youth Profile
  /youth-profile-verification:
    post:
      summary: Youth profile verification
      description: 'API endpoint to verify a youth profile. A successful request response will show 200 HTTP status code '
      parameters:
        - name: email
          in: query
          schema:
            type: string
            example: test14@gmail.com
            description: If youth select email as verification type then email is required
        - name: mobile
          in: query
          schema:
            type: string
            example: '01767000124'
            description: If youth select mobile as verification type then mobile is required
        - name: verification_code
          in: query
          required: true
          schema:
            type: integer
            example: 1234
      responses:
        '200':
          description: verify_youth_profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/verifyYouthProfile'
      tags:
        - Youth Profile
  /youth-change-freelance-status:
    put:
      summary: Youth change freelance status
      description: 'API endpoint to update freelance status. A successful request response will show 200 HTTP status code '
      parameters:
        - name: is_freelance_profile
          in: query
          schema:
            type: string
            default: 0
      responses:
        '200':
          description: set_freelance_status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/freelanceStatusUpdate'
      tags:
        - Youth Profile
  /youth-certifications:
    get:
      summary: get_list
      description: 'API endpoint to get the list of certifications. A successful request response will show 200 HTTP status code '
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/youth_id'
        - $ref: '#/components/parameters/page_size'
        - $ref: '#/components/parameters/order'
        - $ref: '#/components/parameters/row_status'
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Certification'
              example:
                current_page: 1
                total_page: 1
                page_size: 10
                total: 10
                order: ASC
                data:
                  - id: 1
                    youth_id: 1
                    certification_name: Schmitt Group
                    certification_name_en: Schmitt Group
                    institute_name: Coursera
                    institute_name_en: Coursera
                    location: 720 Gina Ways
                    location_en: 8485 Gleason Place
                    start_date: '1974-07-03'
                    end_date: '1993-06-06'
                    certificate_file_path: 0
                    row_status: 1
                    created_at: '2021-08-19T08:55:03.000000Z'
                    updated_at: '2021-08-19T08:55:03.000000Z'
                response_status:
                  success: true
                  code: 200
                  query_time: 0
      tags:
        - Certification
    post:
      summary: create
      description: API endpoint to create a certification.A successful request response will show 200 HTTP status code
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Certification'
      responses:
        '200':
          description: create
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Certification'
              example:
                data:
                  id: 1
                  youth_id: 1
                  certification_name: Schmitt Group
                  certification_name_en: Schmitt Group
                  institute_name: Coursera
                  institute_name_en: Coursera
                  location: 720 Gina Ways
                  location_en: 8485 Gleason Place
                  start_date: '1974-07-03'
                  end_date: '1993-06-06'
                  certificate_file_path: 0
                  row_status: 1
                  created_at: '2021-08-19T08:55:03.000000Z'
                  updated_at: '2021-08-19T08:55:03.000000Z'
                _response_status:
                  success: true
                  code: 201
                  message: Certificate added successfully
                  query_time: 0
      tags:
        - Certification
  /youth-certifications/{certificationId}:
    get:
      summary: get_one
      description: API endpoint to get a specified Certificate.A successful request response will show 200 HTTP status code
      parameters:
        - name: certificationId
          in: path
          required: true
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Certification'
              example:
                data:
                  id: 1
                  youth_id: 1
                  certification_name: Schmitt Group
                  certification_name_en: Schmitt Group
                  institute_name: Coursera
                  institute_name_en: Coursera
                  location: 720 Gina Ways
                  location_en: 8485 Gleason Place
                  start_date: '1974-07-03'
                  end_date: '1993-06-06'
                  certificate_file_path: 0
                  row_status: 1
                  created_at: '2021-08-19T08:55:03.000000Z'
                  updated_at: '2021-08-19T08:55:03.000000Z'
                response_status:
                  success: true
                  code: 200
                  query_time: 0
      tags:
        - Certification
    put:
      summary: update
      description: API endpoint to update the specified Certificate. A successful request response will show 200 HTTP status code
      parameters:
        - name: certificationId
          in: path
          required: true
          schema:
            type: integer
            example: 1
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Certification'
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Certification'
              example:
                data:
                  youth_id: 1
                  certification_name: Schmitt Group
                  certification_name_en: Schmitt Group
                  institute_name: Coursera
                  institute_name_en: Coursera
                  location: 720 Gina Ways
                  location_en: 8485 Gleason Place
                  start_date: '1974-07-03'
                  end_date: '1993-06-06'
                  certificate_file_path: 0
                  row_status: 1
                  created_at: '2021-08-19T08:55:03.000000Z'
                  updated_at: '2021-08-19T08:55:03.000000Z'
                _response_status:
                  success: true
                  code: 200
                  message: Certificate updated successfully.
                  query_time: 0
      tags:
        - Certification
    delete:
      summary: delete
      description: API endpoint to delete the specified Certificate.A successful request response will show 200 HTTP status code
      parameters:
        - name: certificationId
          in: path
          required: true
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Certification'
              example:
                _response_status:
                  success: true
                  code: 200
                  message: Certificate deleted successfully.
                  query_time: 0
      tags:
        - Certification
  /youth-references:
    get:
      summary: get_list
      description: API endpoint to get the list of References.A successful request response will show 200 HTTP status code
      parameters:
        - name: youth_id
          in: query
          required: true
          schema:
            type: integer
            example: 1
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/page_size'
        - $ref: '#/components/parameters/row_status_optional'
        - $ref: '#/components/parameters/order'
      responses:
        '200':
          description: get_list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reference'
              example:
                order: ASC
                data:
                  - id: 1
                    youth_id: 1
                    referrer_first_name: Sally
                    referrer_first_name_en: Sally
                    referrer_last_name: Kihn
                    referrer_last_name_en: Kihn
                    referrer_organization_name: Johns, Yost and Huel
                    referrer_organization_name_en: Fay-Wolff
                    referrer_designation: Athletic Trainer
                    referrer_designation_en: Food Science Technician
                    referrer_address: |-
                      436 Jacquelyn Stream Suite 147
                      Juanitafort, OK 63286
                    referrer_address_en: |-
                      436 Jacquelyn Stream Suite 147
                      Juanitafort, OK 63286
                    referrer_email: rolfson.tracey@example.net
                    referrer_mobile: (312) 747-7214
                    referrer_relation: vitae
                    referrer_relation_en: officiis
                    row_status: 1
                    created_at: '2021-10-06T06:32:28.000000Z'
                    updated_at: '2021-10-06T06:32:28.000000Z'
                response_status:
                  success: true
                  code: 200
                  query_time: 0
      tags:
        - Reference
    post:
      summary: create
      description: API endpoint to create a Reference.A successful request response will show 200 HTTP status code
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Reference'
      responses:
        '200':
          description: create
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reference'
              example:
                data:
                  id: 1
                  youth_id: 1
                  referrer_first_name: Sally
                  referrer_first_name_en: Sally
                  referrer_last_name: Kihn
                  referrer_last_name_en: Kihn
                  referrer_organization_name: Johns, Yost and Huel
                  referrer_organization_name_en: Fay-Wolff
                  referrer_designation: Athletic Trainer
                  referrer_designation_en: Food Science Technician
                  referrer_address: |-
                    436 Jacquelyn Stream Suite 147
                    Juanitafort, OK 63286
                  referrer_address_en: |-
                    436 Jacquelyn Stream Suite 147
                    Juanitafort, OK 63286
                  referrer_email: rolfson.tracey@example.net
                  referrer_mobile: (312) 747-7214
                  referrer_relation: vitae
                  referrer_relation_en: officiis
                  row_status: 1
                  created_at: '2021-10-06T06:32:28.000000Z'
                  updated_at: '2021-10-06T06:32:28.000000Z'
                _response_status:
                  success: true
                  code: 201
                  message: Reference added successfully
                  query_time: 0
      tags:
        - Reference
  /youth-references/{youthReferenceId}:
    get:
      summary: get_one
      description: API endpoint to get a specified Reference.A successful request response will show 200 HTTP status code
      parameters:
        - name: youthReferenceId
          in: path
          required: true
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: get_one
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reference'
              example:
                data:
                  id: 1
                  youth_id: 1
                  referrer_first_name: Sally
                  referrer_first_name_en: Sally
                  referrer_last_name: Kihn
                  referrer_last_name_en: Kihn
                  referrer_organization_name: Johns, Yost and Huel
                  referrer_organization_name_en: Fay-Wolff
                  referrer_designation: Athletic Trainer
                  referrer_designation_en: Food Science Technician
                  referrer_address: |-
                    436 Jacquelyn Stream Suite 147
                    Juanitafort, OK 63286
                  referrer_address_en: |-
                    436 Jacquelyn Stream Suite 147
                    Juanitafort, OK 63286
                  referrer_email: rolfson.tracey@example.net
                  referrer_mobile: (312) 747-7214
                  referrer_relation: vitae
                  referrer_relation_en: officiis
                  row_status: 1
                  created_at: '2021-10-06T06:32:28.000000Z'
                  updated_at: '2021-10-06T06:32:28.000000Z'
                _response_status:
                  success: true
                  code: 200
                  query_time: 0
      tags:
        - Reference
    put:
      summary: update
      description: API endpoint to update the specified Reference. A successful request response will show 200 HTTP status code
      parameters:
        - name: youthReferenceId
          in: path
          required: true
          schema:
            type: integer
            example: 1
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Reference'
      responses:
        '200':
          description: update
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reference'
              example:
                data:
                  id: 1
                  youth_id: 1
                  referrer_first_name: Sally
                  referrer_first_name_en: Sally
                  referrer_last_name: Kihn
                  referrer_last_name_en: Kihn
                  referrer_organization_name: Johns, Yost and Huel
                  referrer_organization_name_en: Fay-Wolff
                  referrer_designation: Athletic Trainer
                  referrer_designation_en: Food Science Technician
                  referrer_address: |-
                    436 Jacquelyn Stream Suite 147
                    Juanitafort, OK 63286
                  referrer_address_en: |-
                    436 Jacquelyn Stream Suite 147
                    Juanitafort, OK 63286
                  referrer_email: rolfson.tracey@example.net
                  referrer_mobile: (312) 747-7214
                  referrer_relation: vitae
                  referrer_relation_en: officiis
                  row_status: 1
                  created_at: '2021-10-06T06:32:28.000000Z'
                  updated_at: '2021-10-06T06:32:28.000000Z'
                _response_status:
                  success: true
                  code: 201
                  message: Reference updated successfully
                  query_time: 0
      tags:
        - Reference
    delete:
      summary: delete
      description: API endpoint to delete the specified Reference.A successful request response will show 200 HTTP status code
      parameters:
        - name: youthReferenceId
          in: path
          required: true
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: delete
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reference'
              example:
                _response_status:
                  success: true
                  code: 200
                  message: Referene deleted successfully.
                  query_time: 0
      tags:
        - Reference
  /youth-educations:
    get:
      summary: get_list
      description: API endpoint to get the list of Educations.A successful request response will show 200 HTTP status code
      parameters:
        - name: youth_id
          in: query
          required: true
          schema:
            type: integer
            example: 1
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/page_size'
        - $ref: '#/components/parameters/row_status_optional'
        - $ref: '#/components/parameters/order'
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Education'
              example:
                order: ASC
                data:
                  - id: 1
                    youth_id: 1
                    institute_name: Ondricka, Casper and Tromp
                    institute_name_en: Ondricka, Casper and Tromp
                    examination_id: 3
                    examination_code: SSC
                    examination_title_en: SSC/Equivalent
                    examination_title_bn: এসএসসি/সমমান
                    board_id: 8
                    board_title_en: Rajshahi
                    board_title_bn: রাজশাহী
                    edu_group_id: 2
                    edu_group_code: Humanities
                    edu_group_title_en: Arts and Humanities
                    edu_group_title_bn: মানবিক
                    major_or_subject_id: null
                    roll_number: '210381657639'
                    registration_number: '932081741473'
                    result_type: 2
                    division_type_result: null
                    cgpa_gpa_max_value: 5
                    received_cgpa_gpa: 2.1
                    passing_year: 1989
                    row_status: 1
                    created_at: '2021-10-06T07:06:47.000000Z'
                    updated_at: '2021-10-06T07:06:47.000000Z'
                response_status:
                  success: true
                  code: 200
                  query_time: 0
      tags:
        - Education
    post:
      summary: create
      description: API endpoint to create an Education.A successful request response will show 200 HTTP status code
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Education'
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Education'
              example:
                data:
                  id: 1
                  youth_id: 1
                  institute_name: Ondricka, Casper and Tromp
                  institute_name_en: Ondricka, Casper and Tromp
                  examination_id: 3
                  examination_code: SSC
                  examination_title_en: SSC/Equivalent
                  examination_title_bn: এসএসসি/সমমান
                  board_id: 8
                  board_title_en: Rajshahi
                  board_title_bn: রাজশাহী
                  edu_group_id: 2
                  edu_group_code: Humanities
                  edu_group_title_en: Arts and Humanities
                  edu_group_title_bn: মানবিক
                  major_or_subject_id: null
                  roll_number: '210381657639'
                  registration_number: '932081741473'
                  result_type: 2
                  division_type_result: null
                  cgpa_gpa_max_value: 5
                  received_cgpa_gpa: 2.1
                  passing_year: 1989
                  row_status: 1
                  created_at: '2021-10-06T07:06:47.000000Z'
                  updated_at: '2021-10-06T07:06:47.000000Z'
                _response_status:
                  success: true
                  code: 201
                  message: Education added successfully
                  query_time: 0
      tags:
        - Education
  /youth-educations/{educationsId}:
    get:
      summary: get_one
      description: API endpoint to get a specified Education.A successful request response will show 200 HTTP status code
      parameters:
        - name: educationsId
          in: path
          required: true
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: get_one
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Education'
              example:
                data:
                  id: 1
                  youth_id: 1
                  institute_name: Ondricka, Casper and Tromp
                  institute_name_en: Ondricka, Casper and Tromp
                  examination_id: 3
                  examination_code: SSC
                  examination_title_en: SSC/Equivalent
                  examination_title_bn: এসএসসি/সমমান
                  board_id: 8
                  board_title_en: Rajshahi
                  board_title_bn: রাজশাহী
                  edu_group_id: 2
                  edu_group_code: Humanities
                  edu_group_title_en: Arts and Humanities
                  edu_group_title_bn: মানবিক
                  major_or_subject_id: null
                  roll_number: '210381657639'
                  registration_number: '932081741473'
                  result_type: 2
                  division_type_result: null
                  cgpa_gpa_max_value: 5
                  received_cgpa_gpa: 2.1
                  passing_year: 1989
                  row_status: 1
                  created_at: '2021-10-06T07:06:47.000000Z'
                  updated_at: '2021-10-06T07:06:47.000000Z'
                _response_status:
                  success: true
                  code: 200
                  query_time: 0
      tags:
        - Education
    put:
      summary: update
      description: API endpoint to update the Education. A successful request response will show 200 HTTP status code
      parameters:
        - name: educationsId
          in: path
          required: true
          schema:
            type: integer
            example: 1
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Education'
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Education'
              example:
                data:
                  id: 1
                  youth_id: 1
                  institute_name: Ondricka, Casper and Tromp
                  institute_name_en: Ondricka, Casper and Tromp
                  examination_id: 3
                  examination_code: SSC
                  examination_title_en: SSC/Equivalent
                  examination_title_bn: এসএসসি/সমমান
                  board_id: 8
                  board_title_en: Rajshahi
                  board_title_bn: রাজশাহী
                  edu_group_id: 2
                  edu_group_code: Humanities
                  edu_group_title_en: Arts and Humanities
                  edu_group_title_bn: মানবিক
                  major_or_subject_id: null
                  roll_number: '210381657639'
                  registration_number: '932081741473'
                  result_type: 2
                  division_type_result: null
                  cgpa_gpa_max_value: 5
                  received_cgpa_gpa: 2.1
                  passing_year: 1989
                  row_status: 1
                  created_at: '2021-10-06T07:06:47.000000Z'
                  updated_at: '2021-10-06T07:06:47.000000Z'
                _response_status:
                  success: true
                  code: 201
                  message: Education updated successfully
                  query_time: 0
      tags:
        - Education
    delete:
      summary: delete
      description: API endpoint to delete the specified Education.A successful request response will show 200 HTTP status code
      parameters:
        - name: educationsId
          in: path
          required: true
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Education'
              example:
                _response_status:
                  success: true
                  code: 200
                  message: Education deleted successfully.
                  query_time: 0
      tags:
        - Education
components:
  schemas:
    Youth:
      type: object
      description: Provide Youth Profile Information
      properties:
        id:
          type: integer
          readOnly: true
        name_en:
          type: string
          maxLength: 191
        name_bn:
          type: string
          maxLength: 500
        mobile:
          type: string
          maxLength: 20
        email:
          type: string
          format: email
        father_name_en:
          type: string
          maxLength: 191
        father_name_bn:
          type: string
          maxLength: 500
        mother_name_en:
          type: string
          maxLength: 191
        mother_name_bn:
          type: string
          maxLength: 500
        guardian_name_en:
          type: string
          maxLength: 191
        guardian_name_bn:
          type: string
          maxLength: 500
        relation_with_guardian:
          type: string
          maxLength: 191
        gender:
          type: integer
          enum:
            - 1
            - 2
            - 3
          description: 1=>Male,2=>Female,3=>Others
          default: 1
        date_of_birth:
          type: string
          format: date
        nid:
          type: string
        passport_number:
          type: string
        nationality:
          type: string
        religion:
          type: integer
        marital_status:
          type: integer
          enum:
            - 0
            - 1
          description: 0=>No,1=>Yes
          default: 1
        current_employment_status:
          type: integer
          enum:
            - 0
            - 1
          description: 0=>No,1=>Yes
          default: 1
        main_occupation:
          type: string
        other_occupation:
          type: string
        personal_monthly_income:
          type: number
          format: double
        year_of_experience:
          type: integer
        physical_disabilities_status:
          type: integer
          enum:
            - 0
            - 1
          description: 0=>No,1=>Yes
          default: 1
        freedom_fighter_status:
          type: integer
          enum:
            - 0
            - 1
          description: 0=>No,1=>Yes
          default: 1
        present_address_division_id:
          type: integer
        present_address_district_id:
          type: integer
        present_address_upazila_id:
          type: integer
        present_house_address:
          type: integer
        permanent_address_division_id:
          type: integer
        permanent_address_district_id:
          type: integer
        permanent_address_upazila_id:
          type: integer
        permanent_house_address:
          type: integer
        is_ethnic_group:
          type: integer
          enum:
            - 0
            - 1
          description: 0=>No,1=>Yes
          default: 1
        photo:
          type: string
        signature:
          type: string
        deleted_at:
          type: string
          format: date-time
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
        - name_en
        - name_bn
        - mobile
        - email
        - nationality
    Skill:
      type: object
      description: provide skills
      properties:
        id:
          type: integer
          description: Primary Key
          readOnly: true
        title_en:
          type: string
          description: title in English
          minLength: 2
          maxLength: 191
        title:
          type: string
          description: ' title in Native'
          minLength: 2
          maxLength: 600
          example: Native title
        description:
          type: string
          description: Details of a skill
          maximum: 5000
          minimum: 2
        description_en:
          type: string
          description: Details of a skill in english
          maximum: 5000
          minimum: 2
        row_status:
          type: integer
          description: Activation status .1 => active ,0=>inactive
          enum:
            - 0
            - 1
          default: 1
        created_by:
          type: integer
          description: Creator
        updated_by:
          type: integer
          description: Modifier
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - title
    youthRegistration:
      type: object
      description: Youth Profile
      properties:
        id:
          type: integer
          readOnly: true
        user_name_type:
          type: integer
          enum:
            - 1
            - 2
          description: 1=>Email Type, 2=>Mobile Number
        first_name:
          type: string
          minLength: 2
          maxLength: 500
        first_name_en:
          type: string
          minLength: 2
          maxLength: 500
        last_name:
          type: string
          minLength: 2
          maxLength: 500
        last_name_en:
          type: string
          minLength: 2
          maxLength: 500
        gender:
          type: integer
          enum:
            - 1
            - 2
            - 3
          description: 1=>Male,2=>Female,3=>Others
          default: 1
        email:
          type: string
          format: email
          uniqueItems: true
        mobile:
          type: string
          maxLength: 11
          uniqueItems: true
        date_of_birth:
          type: string
          format: date
          pattern: yyyy-mm-dd
        skills:
          type: array
          minItems: 1
          maxItems: 10
          items:
            type: integer
            uniqueItems: true
            enum:
              - 1
              - 2
              - 3
        physical_disability_status:
          type: integer
          enum:
            - 0
            - 1
          description: 0=>No,1=>Yes
          default: 0
        physical_disabilities:
          type: array
          minItems: 1
          items:
            type: integer
            uniqueItems: true
            example: 1
          description: 1=> Visual Disabilities, 2=> Hearing Disabilities, 3=> Mental Health Disabilities,4=> Intellectual Disabilities, 5=> Social Disabilities
        password:
          type: string
          format: password
          example: '#Piyal_15021#'
        password_confirmation:
          type: string
          format: password
          example: '#Piyal_15021#'
        loc_division_id:
          type: integer
          example: '1'
        loc_district_id:
          type: integer
          example: '1'
        loc_upazila_id:
          type: integer
          example: '1'
        village_or_area:
          type: string
        village_or_area_en:
          type: string
        zip_or_postal_code:
          type: string
      required:
        - user_name_type
        - first_name
        - last_name
        - gender
        - email
        - mobile
        - skills
        - password
        - password_confirmation
        - physical_disability_status
        - date_of_birth
        - loc_division_id
        - loc_district_id
        - zip_or_postal_code
    youthProfile:
      type: object
      description: Youth Profile
      properties:
        idp_user_id:
          type: string
          example: yt7idt698adugiiausj
        is_freelance_profile:
          type: string
          default: 0
        username:
          type: string
          uniqueItems: true
        user_name_type:
          type: integer
          enum:
            - 1
            - 2
          description: 1=>Email Type,2=>Mobile Number
        first_name:
          type: string
          maximum: 500
        first_name_en:
          type: string
          maximum: 500
        last_name:
          type: string
          maximum: 500
        last_name_en:
          type: string
          maximum: 500
        gender:
          type: integer
          enum:
            - 1
            - 2
            - 3
          description: 1=>male,2=>female,3=>others
        email:
          type: string
        mobile:
          type: string
        date_of_birth:
          type: string
          format: date-time
        physical_disability_status:
          type: integer
          enum:
            - 0
            - 1
          description: 0=>No,1=>Yes
          default: 0
        loc_division_id:
          type: integer
        loc_district_id:
          type: integer
        loc_upazila_id:
          type: integer
        village_or_area:
          type: string
          maximum: 500
        village_or_area_en:
          type: string
          maximum: 500
        house_n_road:
          type: string
          maximum: 500
        house_n_road_en:
          type: string
          maximum: 500
        zip_or_postal_code:
          type: string
          maximum: 10
        bio:
          type: string
        bio_en:
          type: string
        photo:
          type: string
          maximum: 300
        cv_path:
          type: string
          maximum: 300
        row_status:
          type: integer
          description: Youth activation status
          enum:
            - 1
            - 0
        deleted_at:
          type: string
          format: date-time
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
        - username
        - first_name
        - last_name
        - email
        - mobile
        - loc_division_id
        - loc_district_id
    youthProfileUpdateSchema:
      type: object
      description: Youth Profile
      properties:
        first_name:
          type: string
          example: ABC Name
        first_name_en:
          type: string
          example: ABC Name
        last_name:
          type: string
          example: abc
        last_name_en:
          type: string
          example: abc
        email:
          type: string
          format: email
          example: test.123@gmail.com
        mobile:
          type: string
          example: '01767111434'
        city:
          type: string
          example: 1/2 Dhaka Bangladesh
        zip_or_postal_code:
          type: string
          example: '12345'
        bio:
          type: string
          example: A required Microsoft Windows system directory, the System32 directory is located in either C:\Windows\System32 or C:\Winnt\system32 directory. The system32 directory contains Windows system files and software program files, vital to the operation of the Windows operating system and software programs running in Windows. The most common types of files found in the system32 directory are DLL (Dynamic Link Library) and EXE (executable) files.
        photo:
          type: string
          example: photo.png
        cv_path:
          type: string
          example: cv_path.png
      required:
        - first_name
        - last_name
        - gender
        - email
        - mobile
        - city
        - zip_or_postal_code
        - bio
    portfolio:
      type: object
      description: Youth Portfolios
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          description: Title in native
          maxLength: 400
          minLength: 2
          example: native title
        title_en:
          type: string
          description: Title in english
          maxLength: 300
          minLength: 2
        description:
          type: string
          description: Description in English
        description_en:
          type: string
          description: Description in native
        file_path:
          type: string
        youth_id:
          type: integer
        deleted_at:
          type: string
          format: date-time
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
        - title
        - youth_id
    jobExperience:
      type: object
      description: Job Experience
      properties:
        id:
          type: integer
          readOnly: true
        youth_id:
          type: integer
        company_name:
          type: string
        company_name_en:
          type: string
          maxLength: 300
        position:
          type: string
          maxLength: 150
        position_en:
          type: string
          maxLength: 150
        employment_type_id:
          type: integer
          enum:
            - 1
            - 2
            - 3
            - 4
          description: '1=>Full Time,2=>Part Time,3=>Casual,4=>Apprentice or Trainee '
        location:
          type: string
          maxLength: 300
        location_en:
          type: string
          maxLength: 300
        job_description:
          type: string
        job_description_en:
          type: string
        start_date:
          type: string
          format: date-time
          example: '2021-10-04'
        end_date:
          type: string
          format: date-time
        is_currently_work:
          type: integer
          enum:
            - 1
            - 0
          description: 1=>Yes,0=>No
          default: 0
        row_status:
          type: integer
          default: 1
        deleted_at:
          type: string
          format: date-time
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
        - youth_id
        - company_name
        - position
        - employment_type_id
        - location
        - start_date
    Reference:
      type: object
      description: Provide references of a youth
      properties:
        id:
          type: integer
          readOnly: true
        youth_id:
          type: integer
          example: 1
        referrer_first_name:
          type: string
          maxLength: 250
        referrer_first_name_en:
          type: string
          maxLength: 150
        referrer_last_name:
          type: string
          maxLength: 250
        referrer_last_name_en:
          type: string
          maxLength: 150
        referrer_organization_name:
          type: string
          maxLength: 600
        referrer_organization_name_en:
          type: string
          maxLength: 300
        referrer_designation:
          type: string
          maxLength: 500
        referrer_designation_en:
          type: string
          maxLength: 200
        referrer_address:
          type: string
          maxLength: 1000
        referrer_address_en:
          type: string
          maxLength: 600
        referrer_email:
          type: string
          maxLength: 191
        referrer_mobile:
          type: string
          maxLength: 15
        referrer_relation:
          type: string
          maxLength: 600
        referrer_relation_en:
          type: string
          maxLength: 300
        row_status:
          type: integer
          description: activation status
          enum:
            - 1
            - 0
          example: 1
        deleted_at:
          type: string
          format: date-time
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
        - youth_id
        - referrer_first_name
        - referrer_last_name
        - referrer_designation
        - referrer_organization_name
        - referrer_address
        - referrer_email
        - referrer_mobile
        - referrer_relation
    Certification:
      type: object
      description: Provide certifications
      properties:
        id:
          type: integer
          readOnly: true
        youth_id:
          type: integer
          example: 1
        certification_name:
          type: string
          maxLength: 300
        certification_name_en:
          type: string
          maxLength: 300
        institute_name:
          type: string
          maxLength: 300
        institute_name_en:
          type: string
          maxLength: 300
        location:
          type: string
          maxLength: 300
        location_en:
          type: string
          maxLength: 300
        start_date:
          type: string
          format: date
          example: '2021-10-04'
        end_date:
          type: string
          format: date
          example: '2021-10-06'
        certificate_file_path:
          type: string
          maxLength: 500
        row_status:
          type: integer
          description: District activation status
          enum:
            - 1
            - 0
          default: 1
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          readOnly: true
      required:
        - certification_name
        - institute_name
        - location
        - youth_id
        - certificate_file_path
    verifyYouthProfile:
      type: object
      description: Verify youth profile
      properties:
        mobile:
          type: string
          maxLength: 20
        email:
          type: string
          format: email
        verification_code:
          type: integer
      required:
        - verification_code
    freelanceStatusUpdate:
      type: object
      description: Youth profile verification
      properties:
        is_freelance_profile:
          type: integer
          default: 0
      required:
        - is_freelance_profile
    Education:
      type: object
      description: Provide educational info of a youth
      properties:
        id:
          type: integer
          readOnly: true
        youth_id:
          type: integer
          example: 1
        institute_name:
          type: string
          maxLength: 400
        institute_name_en:
          type: string
          maxLength: 400
        examination_id:
          type: integer
          description: PSC, JSC, SSC, HSC, Degree, B.Sc. (Pass), Honours, Preliminary Masters, Masters etc
        board_id:
          type: integer
          description: Only for PSC, JSC, SSC, HSC etc
        edu_group_id:
          type: integer
          description: '''1 => Science, 2 => Commerce, 3 => Arts (Only for PSC, JSC, SSC, HSC, Degree)'
        major_or_subject_id:
          type: integer
          description: '''Only for Honours/Masters'''
        roll_number:
          type: string
          maxLength: 100
        registration_number:
          type: string
          maxLength: 100
        result_type:
          type: integer
          description: 1 => Division, 2 => Grade point
        division_type_result:
          type: integer
          description: 1 => 1st Class, 2 => 2nd Class, 3 => 3rd Class
        cgpa_gpa_max_value:
          type: integer
          description: floating point number
        received_cgpa_gpa:
          type: integer
          description: floating point number
        passing_year:
          type: integer
          format: year
          example: 2015
        row_status:
          type: integer
          description: activation status
          enum:
            - 1
            - 0
          example: 1
        deleted_at:
          type: string
          format: date-time
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
        - youth_id
        - examination_id
        - roll_number
        - institute_name
        - registration_number
        - result_type
        - passing_year
  parameters:
    skillId:
      name: skillId
      in: path
      required: true
      schema:
        type: integer
        example: 1
    title_bn_optional:
      name: title_bn
      in: query
      required: false
      style: form
      schema:
        type: string
    title_en_optional:
      name: title_en
      in: query
      required: false
      style: form
      schema:
        type: string
    row_status_optional:
      name: row_status
      in: query
      required: false
      schema:
        type: integer
    page_size:
      name: page_size
      in: query
      required: false
      schema:
        type: integer
    youthId:
      name: youthId
      in: path
      required: true
      schema:
        type: integer
        example: 1
    name_en:
      style: form
      name: name_en
      in: query
      schema:
        type: string
    name_bn:
      style: form
      name: name_bn
      in: query
      schema:
        type: string
    name_bn_optional:
      style: form
      name: name_bn
      in: query
      schema:
        type: string
    name_en_optional:
      style: form
      name: name_en
      in: query
      schema:
        type: string
    page:
      name: page
      in: query
      required: false
      style: form
      schema:
        type: integer
        example: 1
    order:
      in: query
      name: order
      required: false
      style: form
      schema:
        type: string
        enum:
          - asc
          - desc
    row_status:
      name: row_status
      in: query
      required: false
      style: form
      schema:
        type: integer
        enum:
          - 1
          - 0
        example: 1
    title_optional:
      name: title
      in: query
      required: false
      style: form
      schema:
        type: string
    youth_id:
      name: youth_id
      in: query
      required: true
      style: form
      schema:
        type: integer
        example: 1
    portfolioId:
      name: portfolioId
      in: path
      required: true
      schema:
        type: integer
    company_name_en:
      name: company_name_en
      in: query
      required: false
      style: form
      schema:
        type: string
    company_name_bn:
      name: company_name_bn
      in: query
      required: false
      style: form
      schema:
        type: string
    jobExperienceId:
      name: jobExperienceId
      in: path
      required: true
      schema:
        type: integer
