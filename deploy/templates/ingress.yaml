{{ if .Values.variables.enableEngress }}

kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: "{{ .Chart.Name }}-ingress"
  annotations:
    cert-manager.io/cluster-issuer: {{ .Values.variables.ingressClusterIssuer }}
    kubernetes.io/ingress.class: nginx
    {{ if .Values.variables.enableEngress }}
    kubernetes.io/tls-acme: 'true'
    {{end}}
    nginx.ingress.kubernetes.io/ssl-passthrough: 'true'
spec:
  tls:
    - hosts:
        {{ if eq .Values.variables.APP_ENV "LOCAL" }}
        - "{{ .Values.variables.DEV.APP_URL }}"
        {{end}}
        {{ if eq .Values.variables.APP_ENV "STAGING" }}
        - "{{ .Values.variables.STAGING.APP_URL }}"
        {{end}}
        {{ if eq .Values.variables.APP_ENV "PRODUCTION" }}
        - "{{ .Values.variables.PRODUCTION.APP_URL }}"
        {{end}}
      secretName: "{{ .Chart.Name }}-secret"
  rules:
        {{ if eq .Values.variables.APP_ENV "LOCAL" }}
    - host: "{{ .Values.variables.DEV.APP_URL }}"
        {{end}}
        {{ if eq .Values.variables.APP_ENV "STAGING" }}
    - host: "{{ .Values.variables.STAGING.APP_URL }}"
        {{end}}
        {{ if eq .Values.variables.APP_ENV "PRODUCTION" }}
    - host: "{{ .Values.variables.PRODUCTION.APP_URL }}"
        {{end}}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: {{ .Chart.Name }}
                port:
                  name: http
{{end}}
